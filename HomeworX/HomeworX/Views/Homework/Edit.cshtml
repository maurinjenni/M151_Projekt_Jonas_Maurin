@using HomeworX.Models
@model HomeworX.Models.Homework

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<script>
    function dropdowonchange() {
        $("#TopicListBox > option").remove();

        var topics = @Html.Raw(
                         Json.Encode(
                             ((IEnumerable<Topic>)ViewBag.Topics).Select(topic => new
                             {
                                 UID = topic.UID,
                                 SubjectUID = topic.SubjectUID,
                                 Description = topic.Description
                             })
                             )
                         );

        var subjectUID = $("#SubjectDropDown").val();

        topics.forEach(function(topic) {
            if (topic.SubjectUID == subjectUID) {
                $('#TopicListBox').append('<option value="' + topic.UID + '">' + topic.Description + '</option>');
            }
        });
    }

    $(document).ready(function() {
        dropdowonchange();

        var topics = @Html.Raw(
                         Json.Encode(
                             ((IEnumerable<Topic>)ViewBag.Topics).Select(topic => new
                             {
                                 UID = topic.UID,
                                 SubjectUID = topic.SubjectUID,
                                 Description = topic.Description
                             })
                             )
                         );

        var selectedtopics = @Html.Raw(
                                 Json.Encode(
                                     ((IEnumerable<TopicToAppointment>)Model.Appointment.TopicToAppointment).Select(tta => tta.TopicUID)
                                     ));

        console.log(selectedtopics);

        topics.forEach(function(topic) {
            console.log(topic.UID);
            console.log($.inArray(topic.UID, selectedtopics));

            if ($.inArray(topic.UID, selectedtopics) !== -1) {
                console.log($('#TopicListBox option[value=' + topic.UID + ']'));
                $('#TopicListBox option[value=' + topic.UID + ']').prop('selected', true);
            }
        });
    });
</script>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Homework</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.UID)
        
        <div class="form-group">
            @Html.LabelFor(model => model.Appointment.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Appointment.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Appointment.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Appointment.Detail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Appointment.Detail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Appointment.Detail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Appointment.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Appointment.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Appointment.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Appointment.SubjectUID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Appointment.SubjectUID, (IEnumerable<SelectListItem>)ViewBag.Subjects, new { @class = "form-control", @onchange = "dropdowonchange()", @ID = "SubjectDropDown" })
                @Html.ValidationMessageFor(model => model.Appointment.SubjectUID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Topics, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.Topics, new MultiSelectList(((ICollection<Topic>)ViewBag.Topics), "UID", "Description"), new { @class = "form-control", @ID = "TopicListBox" })
                @Html.ValidationMessageFor(model => model.Topics, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Importance, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Importance, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Importance, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-1">
                <input type="submit" value="Save" class="btn btn-default btn-block" />
            </div>

            <div class="col-md-1">
                @Html.ActionLink("Liste", "Index", null, new { @class = "btn btn-default btn-block" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
