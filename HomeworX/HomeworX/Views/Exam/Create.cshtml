@using System.Collections
@using HomeworX.Models
@using Microsoft.Ajax.Utilities
@model HomeworX.Models.Exam

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<script>
        function dropdowonchange() {
            $("#TopicListBox > option").remove();

            var topics = @Html.Raw(
                Json.Encode(
                    ((IEnumerable<Topic>)ViewBag.Topics).Select(topic => new
                    {
                        UID = topic.UID,
                        SubjectUID = topic.SubjectUID,
                        Description = topic.Description
                    })
                )
            );

            console.log(topics);

            var subjectUID = $("#SubjectDropDown").val();

            console.log(subjectUID);

            topics.forEach(function(topic) {
                console.log(topic);
                if (topic.SubjectUID == subjectUID) {
                    console.log("topic: " + topic.SubjectUID + "Subject: " + subjectUID);
                    $('#TopicListBox').append('<option value="' + topic.UID + '">' + topic.Description + '</option>');
                }
            });
        }

        $(document).ready(function() {
            dropdowonchange();
        });  
</script>

<script type="text/javascript">
  function toggle(id){
    var e = document.getElementById(id);
    var button = document.getElementById('aufklappButton');

    if (e.style.display == "none"){
        e.style.display = "";
        button.innerHTML = "Zuklappen";
    } else {
        e.style.display = "none";
        button.innerHTML = "Errinnerung";
    }
  }
</script>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()



    <div class="form-horizontal">
        <h4>Exam</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Appointment.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Appointment.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Appointment.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Appointment.Detail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Appointment.Detail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Appointment.Detail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Appointment.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Appointment.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Appointment.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Appointment.SubjectUID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Appointment.SubjectUID, (IEnumerable<SelectListItem>)ViewBag.Subjects, new { @class = "form-control", @onchange = "dropdowonchange()", @ID = "SubjectDropDown" })
                @Html.ValidationMessageFor(model => model.Appointment.SubjectUID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Topics, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.Topics, new MultiSelectList(((ICollection<Topic>)ViewBag.Topics), "UID", "Description"), new { @class = "form-control", @ID = "TopicListBox" })
                @Html.ValidationMessageFor(model => model.Topics, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-1 left">
                <a href="javascript:toggle('remindContainer')" id="aufklappButton" class="btn btn-default btn-block">Errinnerung</a>
            </div>
        </div>

        <div id="remindContainer" style="display: none">
            <div class="form-group">
                @Html.LabelFor(model => model.Time, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Mailadress, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Mailadress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Mailadress, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-1">
                <input type="submit" value="Create" class="btn btn-default btn-block" />
            </div>

            <div class="col-md-1">
                @Html.ActionLink("Liste", "Index", null, new { @class = "btn btn-default btn-block" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
